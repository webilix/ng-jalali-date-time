{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toString = exports.toObject = exports.toGregorian = exports.toJalali = exports.getMoment = exports.checkMonth = exports.checkTimezone = exports.checkLocale = exports.checkDate = void 0;\n\nconst moment = __importStar(require(\"moment-timezone\"));\n\nconst checkDate = date => {\n  return Object.prototype.toString.call(date) === '[object Date]';\n};\n\nexports.checkDate = checkDate;\n\nconst checkLocale = locale => {\n  return ['EN', 'FA'].indexOf(locale.toUpperCase()) !== -1;\n};\n\nexports.checkLocale = checkLocale;\n\nconst checkTimezone = timezone => {\n  return moment.tz.names().indexOf(timezone) !== -1;\n};\n\nexports.checkTimezone = checkTimezone;\n\nconst checkMonth = month => {\n  if (month.length !== 7 || month.indexOf('-') !== 4) return false;\n  const [yString, mString] = month.split('-');\n  var regex = new RegExp('^[0-9]+$');\n  if (!regex.test(yString) || yString < '1000' || yString > '9999') return false;\n  if (!regex.test(mString) || mString < '01' || mString > '12') return false;\n  return true;\n};\n\nexports.checkMonth = checkMonth;\n\nconst getMoment = (date, timezone) => moment.default(date).tz(timezone || 'Asia/Tehran');\n\nexports.getMoment = getMoment;\nconst _week = ['شنبه', 'یک‌شنبه', 'دوشنبه', 'سه‌شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه'];\nconst _month = ['فروردین', 'اردیبهشت', 'خرداد', 'تیر', 'مرداد', 'شهریور', 'مهر', 'آبان', 'آذر', 'دی', 'بهمن', 'اسفند'];\nconst _fa = [31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 29];\nconst _en = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nconst _div = (a, b) => {\n  return Math.floor(a / b);\n};\n\nconst toJalali = date => {\n  let gy = date.year - 1600;\n  let gm = date.month - 1;\n  let gd = date.day - 1;\n\n  let g_day_no = 365 * gy + _div(gy + 3, 4) - _div(gy + 99, 100) + _div(gy + 399, 400);\n\n  for (var i = 0; i < gm; ++i) g_day_no += _en[i];\n\n  if (gm > 1 && (gy % 4 == 0 && gy % 100 != 0 || gy % 400 == 0)) ++g_day_no;\n  g_day_no += gd;\n  let j_day_no = g_day_no - 79;\n\n  let j_np = _div(j_day_no, 12053);\n\n  j_day_no %= 12053;\n\n  let jy = 979 + 33 * j_np + 4 * _div(j_day_no, 1461);\n\n  j_day_no %= 1461;\n\n  if (j_day_no >= 366) {\n    jy += _div(j_day_no - 1, 365);\n    j_day_no = (j_day_no - 1) % 365;\n  }\n\n  for (var i = 0; i < 11 && j_day_no >= _fa[i]; ++i) j_day_no -= _fa[i];\n\n  let jm = i + 1;\n  let jd = j_day_no + 1;\n  return {\n    week: date.week,\n    year: jy,\n    month: jm,\n    day: jd,\n    hour: date.hour,\n    minute: date.minute,\n    second: date.second\n  };\n};\n\nexports.toJalali = toJalali;\n\nconst toGregorian = date => {\n  let jy = date.year - 979;\n  let jm = date.month - 1;\n  let jd = date.day - 1;\n\n  let j_day_no = 365 * jy + _div(jy, 33) * 8 + _div(jy % 33 + 3, 4);\n\n  for (var i = 0; i < jm; ++i) j_day_no += _fa[i];\n\n  j_day_no += jd;\n  let g_day_no = j_day_no + 79;\n\n  let gy = 1600 + 400 * _div(g_day_no, 146097);\n\n  g_day_no = g_day_no % 146097;\n  let leap = true;\n\n  if (g_day_no >= 36525) {\n    g_day_no--;\n    gy += 100 * _div(g_day_no, 36524);\n    g_day_no = g_day_no % 36524;\n    if (g_day_no >= 365) g_day_no++;else leap = false;\n  }\n\n  gy += 4 * _div(g_day_no, 1461);\n  g_day_no %= 1461;\n\n  if (g_day_no >= 366) {\n    leap = false;\n    g_day_no--;\n    gy += _div(g_day_no, 365);\n    g_day_no = g_day_no % 365;\n  }\n\n  for (var i = 0; g_day_no >= _en[i] + (i === 1 && leap ? 1 : 0); i++) g_day_no -= _en[i] + (i === 1 && leap ? 1 : 0);\n\n  let gm = i + 1;\n  let gd = g_day_no + 1;\n  const gregorian = gy.toString() + '-' + gm.toString().padStart(2, '0') + '-' + gd.toString().padStart(2, '0');\n  return {\n    year: gy,\n    month: gm,\n    day: gd,\n    date: gregorian\n  };\n};\n\nexports.toGregorian = toGregorian;\n\nconst toObject = date => {\n  return {\n    week: (date.day() + 1) % 7,\n    year: date.year(),\n    month: date.month() + 1,\n    day: date.date(),\n    hour: date.hour(),\n    minute: date.minute(),\n    second: date.second()\n  };\n};\n\nexports.toObject = toObject;\n\nconst toString = (jalali, format, locale) => {\n  format = format.replace(/W/g, _week[jalali.week]).replace(/N/g, _month[jalali.month - 1]).replace(/Y/g, jalali.year.toString()).replace(/y/g, jalali.year.toString().substring(2)).replace(/M/g, jalali.month.toString().padStart(2, '0')).replace(/m/g, jalali.month.toString()).replace(/D/g, jalali.day.toString().padStart(2, '0')).replace(/d/g, jalali.day.toString()).replace(/H/g, jalali.hour.toString().padStart(2, '0')).replace(/h/g, jalali.hour.toString()).replace(/I/g, jalali.minute.toString().padStart(2, '0')).replace(/i/g, jalali.minute.toString()).replace(/S/g, jalali.second.toString().padStart(2, '0')).replace(/s/g, jalali.second.toString());\n\n  if (locale.toLowerCase() === 'fa') {\n    format = format.replace(/0/g, '۰').replace(/1/g, '۱').replace(/2/g, '۲').replace(/3/g, '۳').replace(/4/g, '۴').replace(/5/g, '۵').replace(/6/g, '۶').replace(/7/g, '۷').replace(/8/g, '۸').replace(/9/g, '۹');\n  }\n\n  return format;\n};\n\nexports.toString = toString; //# sourceMappingURL=date.js.map","map":null,"metadata":{},"sourceType":"script"}