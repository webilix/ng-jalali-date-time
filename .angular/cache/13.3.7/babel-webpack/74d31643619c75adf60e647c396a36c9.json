{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nextMonth = void 0;\n\nconst JDate = __importStar(require(\"../../script/date\"));\n\nconst JDT = __importStar(require(\"../../script/jdt\"));\n\nconst string_1 = require(\"../string\");\n\nconst days_in_month_1 = require(\"../days-in-month\");\n\nconst gregorian_1 = require(\"../gregorian\");\n\nconst nextMonth = (day, date, timezone) => {\n  date = date || new Date();\n  if (!JDate.checkDate(date)) throw new TypeError('Invalid Date');\n  if (!JDate.checkTimezone(timezone || '')) timezone = JDT.timezone();\n  if (!['FIRST', 'LAST'].includes(day.toString()) && (typeof day !== 'number' || day < 1 || day > 31)) throw new TypeError('Type must be FIRST, LAST or number between 1, 31');\n  const d = +(0, string_1.toString)(date, {\n    timezone,\n    format: 'D'\n  });\n  let y = +(0, string_1.toString)(date, {\n    timezone,\n    format: 'Y'\n  });\n  let m = +(0, string_1.toString)(date, {\n    timezone,\n    format: 'M'\n  });\n  const cMonth = `${y.toString()}-${m.toString().padStart(2, '0')}`;\n  const cDays = (0, days_in_month_1.daysInMonth)(cMonth);\n  m++;\n\n  if (m >= 13) {\n    y++;\n    m = 1;\n  }\n\n  const nMonth = `${y.toString()}-${m.toString().padStart(2, '0')}`;\n  const nDays = (0, days_in_month_1.daysInMonth)(nMonth);\n  let gDate;\n\n  switch (day) {\n    case 'FIRST':\n      gDate = (0, gregorian_1.gregorian)(`${nMonth}-01`).date;\n      break;\n\n    case 'LAST':\n      gDate = d >= cDays ? (0, gregorian_1.gregorian)(`${nMonth}-${nDays}`).date : (0, gregorian_1.gregorian)(`${cMonth}-${cDays}`).date;\n      break;\n\n    default:\n      const month = d >= day ? nMonth : cMonth;\n      gDate = (0, gregorian_1.gregorian)(`${month}-${day.toString().padStart(2, '0')}`).date;\n\n      while (+(0, string_1.toString)(JDate.getMoment(new Date(gDate), timezone).toDate(), {\n        format: 'D'\n      }) !== day) {\n        m++;\n\n        if (m >= 13) {\n          y++;\n          m = 1;\n        }\n\n        const Y = y.toString();\n        const M = m.toString().padStart(2, '0');\n        const D = day.toString().padStart(2, '0');\n        gDate = (0, gregorian_1.gregorian)(`${Y}-${M}-${D}`).date;\n      }\n\n  }\n\n  return JDate.getMoment(new Date(gDate), timezone).startOf('D').toDate();\n};\n\nexports.nextMonth = nextMonth; //# sourceMappingURL=month.js.map","map":null,"metadata":{},"sourceType":"script"}